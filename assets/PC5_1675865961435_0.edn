{:highlights [{:id #uuid "63e3b191-2a05-4ff8-8b06-8ae0392afe59", :page 13, :position {:bounding {:x1 76, :y1 131.5, :x2 803, :y2 544.5, :width 879.9999999999999, :height 622.0826603325415}, :rects (), :page 13}, :content {:text "[:span]", :image 1675866512119}, :properties {:color "red"}} {:id #uuid "63e3b1aa-e011-4f11-b46e-c35441ed7f97", :page 14, :position {:bounding {:x1 83, :y1 131.5, :x2 823, :y2 536.5, :width 879.9999999999999, :height 622.0826603325415}, :rects (), :page 14}, :content {:text "[:span]", :image 1675866537011}, :properties {:color "green"}} {:id #uuid "63e3b1bb-1efa-42b2-b542-8f43bb618cd2", :page 12, :position {:bounding {:x1 344.875, :y1 100.125, :x2 758.6328735351562, :y2 146.125, :width 879.9999999999999, :height 622.0826603325415}, :rects ({:x1 344.875, :y1 100.125, :x2 758.6328735351562, :y2 146.125, :width 879.9999999999999, :height 622.0826603325415}), :page 12}, :content {:text "快排序算法的并行化"}, :properties {:color "yellow"}} {:id #uuid "63e3b2bb-a6dc-4a0c-9be4-4f232fcce867", :page 16, :position {:bounding {:x1 140, :y1 250, :x2 733, :y2 527, :width 879.9999999999999, :height 622.0826603325415}, :rects (), :page 16}, :content {:text "[:span]", :image 1675866809798}, :properties {:color "yellow"}} {:id #uuid "63e3b2f1-11ee-4ccd-986b-c45d89e4527a", :page 17, :position {:bounding {:x1 90, :y1 123.5, :x2 811, :y2 556.5, :width 879.9999999999999, :height 622.0826603325415}, :rects (), :page 17}, :content {:text "[:span]", :image 1675866869065}, :properties {:color "red"}} {:id #uuid "63e4affe-b26f-4a74-a03f-c934d77cd678", :page 19, :position {:bounding {:x1 378.5546875, :y1 97.3125, :x2 854.8053588867188, :y2 144.8125, :width 1002, :height 708.3259382422802}, :rects ({:x1 378.5546875, :y1 97.3125, :x2 854.8053588867188, :y2 144.8125, :width 1002, :height 708.3259382422802}), :page 19}, :content {:text "枚举排序算法的并行化"}, :properties {:color "yellow"}} {:id #uuid "63e4b09a-cbbc-4080-b244-c66941ce45e3", :page 21, :position {:bounding {:x1 499, :y1 186.5, :x2 882, :y2 605.5, :width 1002, :height 708.3259382422802}, :rects (), :page 21}, :content {:text "[:span]", :image 1675931801744}, :properties {:color "yellow"}} {:id #uuid "63e4b0c9-28ce-42c6-94ec-96576254411c", :page 22, :position {:bounding {:x1 186, :y1 273.5, :x2 848, :y2 497.5, :width 1002, :height 708.3259382422802}, :rects (), :page 22}, :content {:text "[:span]", :image 1675931847602}, :properties {:color "red"}} {:id #uuid "63e4b358-ef2d-49d2-9963-35a109c82b22", :page 27, :position {:bounding {:x1 404.1171875, :y1 94.2265625, :x2 875.1979370117188, :y2 146.7265625, :width 1002.0000000000001, :height 708.3259382422805}, :rects ({:x1 404.1171875, :y1 94.2265625, :x2 875.1979370117188, :y2 146.7265625, :width 1002.0000000000001, :height 708.3259382422805}), :page 27}, :content {:text "串匹配算法的并行化"}, :properties {:color "yellow"}} {:id #uuid "63e4b3cc-e394-4881-949b-40b5ad746e15", :page 28, :position {:bounding {:x1 252.25, :y1 324.46875, :x2 357.0008544921875, :y2 358.96875, :width 1002.0000000000001, :height 708.3259382422805}, :rects ({:x1 252.25, :y1 324.46875, :x2 357.0008544921875, :y2 358.96875, :width 1002.0000000000001, :height 708.3259382422805}), :page 28}, :content {:text "KMP算法"}, :properties {:color "yellow"}} {:id #uuid "63e4b3d8-5d28-42e8-be20-ffdad604dae7", :page 29, :position {:bounding {:x1 255.2421875, :y1 255.921875, :x2 595.4005126953125, :y2 290.421875, :width 1002.0000000000001, :height 708.3259382422805}, :rects ({:x1 255.2421875, :y1 255.921875, :x2 595.4005126953125, :y2 290.421875, :width 1002.0000000000001, :height 708.3259382422805} {:x1 292.9453125, :y1 260.421875, :x2 516.906494140625, :y2 286.625, :width 1002.0000000000001, :height 708.3259382422805}), :page 29}, :content {:text "BM算法（Boyer‐Moore算法）"}, :properties {:color "yellow"}} {:id #uuid "63e4b44d-c18a-4602-a2e8-f9242f57f07b", :page 30, :position {:bounding {:x1 255.8046875, :y1 276.1328125, :x2 411.1180419921875, :y2 310.6328125, :width 1002.0000000000001, :height 708.3259382422805}, :rects ({:x1 255.8046875, :y1 276.1328125, :x2 411.1180419921875, :y2 310.6328125, :width 1002.0000000000001, :height 708.3259382422805} {:x1 255.8125, :y1 280.6328125, :x2 358.7067565917969, :y2 306.8359375, :width 1002.0000000000001, :height 708.3259382422805}), :page 30}, :content {:text "Shift‐And算法"}, :properties {:color "yellow"}} {:id #uuid "63e4b49f-f004-4be6-96ac-df1fd0d644ea", :page 31, :position {:bounding {:x1 188.4140625, :y1 235.90625, :x2 388.3399353027344, :y2 273.40625, :width 1002.0000000000001, :height 708.3259382422805}, :rects ({:x1 188.4140625, :y1 235.90625, :x2 388.3399353027344, :y2 273.40625, :width 1002.0000000000001, :height 708.3259382422805}), :page 31}, :content {:text "近似字符串匹配"}, :properties {:color "yellow"}} {:id #uuid "63e4b556-54d7-4974-a58e-b58a940b95e6", :page 32, :position {:bounding {:x1 257.88714599609375, :y1 276.1328125, :x2 415.1240234375, :y2 310.6328125, :width 1002.0000000000001, :height 708.3259382422805}, :rects ({:x1 257.88714599609375, :y1 276.1328125, :x2 415.1240234375, :y2 310.6328125, :width 1002.0000000000001, :height 708.3259382422805}), :page 32}, :content {:text "动态规划算法"}, :properties {:color "yellow"}} {:id #uuid "63e4b62e-f81b-4a64-9bd5-426b4ab8bea0", :page 33, :position {:bounding {:x1 255.23171997070312, :y1 276.1328125, :x2 464.8197937011719, :y2 310.6328125, :width 1002.0000000000001, :height 708.3259382422805}, :rects ({:x1 255.23171997070312, :y1 276.1328125, :x2 464.8197937011719, :y2 310.6328125, :width 1002.0000000000001, :height 708.3259382422805}), :page 33}, :content {:text "基于自动机的算法"}, :properties {:color "yellow"}} {:id #uuid "63e4b646-313a-401f-880b-bf9b868ef2c6", :page 34, :position {:bounding {:x1 255.8090057373047, :y1 262.640625, :x2 386.8384704589844, :y2 297.140625, :width 1002.0000000000001, :height 708.3259382422805}, :rects ({:x1 255.8090057373047, :y1 262.640625, :x2 386.8384704589844, :y2 297.140625, :width 1002.0000000000001, :height 708.3259382422805}), :page 34}, :content {:text "位并行算法"}, :properties {:color "yellow"}} {:id #uuid "63e4b66d-e92f-4e85-9303-87fcb713ef38", :page 35, :position {:bounding {:x1 257.09808349609375, :y1 276.1328125, :x2 466.7420654296875, :y2 310.6328125, :width 1002.0000000000001, :height 708.3259382422805}, :rects ({:x1 257.09808349609375, :y1 276.1328125, :x2 466.7420654296875, :y2 310.6328125, :width 1002.0000000000001, :height 708.3259382422805}), :page 35}, :content {:text "文本快速过滤算法"}, :properties {:color "yellow"}} {:id #uuid "63e4b7af-fc47-45de-ba09-8181c224d109", :page 36, :position {:bounding {:x1 534.921875, :y1 89.71875, :x2 744.2830810546875, :y2 158.71875, :width 1002.0000000000001, :height 708.3259382422805}, :rects ({:x1 534.921875, :y1 89.71875, :x2 639.5969848632812, :y2 158.71875, :width 1002.0000000000001, :height 708.3259382422805} {:x1 639.5234375, :y1 94.2265625, :x2 744.2830810546875, :y2 146.7265625, :width 1002.0000000000001, :height 708.3259382422805}), :page 36}, :content {:text "KMP算法"}, :properties {:color "yellow"}} {:id #uuid "63e4b99b-0102-4129-aa05-d6092ce6f66e", :page 38, :position {:bounding {:x1 215.328125, :y1 229.1953125, :x2 444.2906494140625, :y2 266.6953125, :width 1002.0000000000001, :height 708.3259382422805}, :rects ({:x1 215.328125, :y1 229.1953125, :x2 444.2906494140625, :y2 266.6953125, :width 1002.0000000000001, :height 708.3259382422805}), :page 38}, :content {:text "KMP算法的并行化"}, :properties {:color "yellow"}} {:id #uuid "63e4dc8f-7a3b-4142-8fc2-49c4f1f068a8", :page 39, :position {:bounding {:x1 177, :y1 236.5, :x2 911, :y2 654.5, :width 1038, :height 733.7747743467933}, :rects (), :page 39}, :content {:text "[:span]", :image 1675943054111}, :properties {:color "red"}} {:id #uuid "63e4ecd1-39f2-4094-8e87-bba4371e0b3d", :page 42, :position {:bounding {:x1 148, :y1 196, :x2 943, :y2 594, :width 1038, :height 733.7747743467933}, :rects (), :page 42}, :content {:text "[:span]", :image 1675947214330}, :properties {:color "green"}} {:id #uuid "63e4ed21-1e33-4145-a0e7-380ec0bf5658", :page 43, :position {:bounding {:x1 182, :y1 249, :x2 924, :y2 619, :width 1038, :height 733.7747743467933}, :rects (), :page 43}, :content {:text "[:span]", :image 1675947295827}, :properties {:color "green"}} {:id #uuid "63e4ed7f-1370-4113-beb9-2d739cbbbba5", :page 49, :position {:bounding {:x1 129.71875, :y1 120.8671875, :x2 919.0308837890625, :y2 170.3671875, :width 1038, :height 733.7747743467933}, :rects ({:x1 129.71875, :y1 120.8671875, :x2 919.0308837890625, :y2 170.3671875, :width 1038, :height 733.7747743467933}), :page 49}, :content {:text "利用矩阵乘法求所有点对间最短路径"}, :properties {:color "yellow"}} {:id #uuid "63e4eda0-20f2-4a4a-8e4a-1aae16e2a4b5", :page 49, :position {:bounding {:x1 149, :y1 356, :x2 922, :y2 628.5, :width 1038, :height 733.7747743467933}, :rects (), :page 49}, :content {:text "[:span]", :image 1675947576069}, :properties {:color "red"}} {:id #uuid "63e4f221-f1e0-44e7-823e-85d843040f65", :page 50, :position {:bounding {:x1 138, :y1 209, :x2 693, :y2 289, :width 1038, :height 733.7747743467933}, :rects (), :page 50}, :content {:text "[:span]", :image 1675948575660}, :properties {:color "green"}} {:id #uuid "63e4f22b-863f-45a3-82c1-b485b28165cf", :page 50, :position {:bounding {:x1 132, :y1 291, :x2 760, :y2 690, :width 1038, :height 733.7747743467933}, :rects (), :page 50}, :content {:text "[:span]", :image 1675948586197}, :properties {:color "red"}} {:id #uuid "63e4f234-3a8e-43be-a809-03659f7b19ee", :page 51, :position {:bounding {:x1 116, :y1 232, :x2 807, :y2 628, :width 1038, :height 733.7747743467933}, :rects (), :page 51}, :content {:text "[:span]", :image 1675948595085}, :properties {:color "red"}}], :extra {:page 51}}